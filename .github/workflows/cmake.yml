name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CMAKE_BUILD_TYPE: ${{ matrix.flavor }}
  CMAKE_CONFIG_TYPE: ${{ matrix.flavor }}
  CC: ${{ matrix.compiler.cc }}
  CXX: ${{ matrix.compiler.cxx }}
  BUILD_DIR: ${{github.workspace}}/build

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: Ubuntu ${{ matrix.flavor }} ${{ matrix.compiler.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        flavor: [Release, Debug]
        compiler: [ {name: "GCC", cc: "gcc", cxx: "g++"}, {name: "Clang", cc: "clang", cxx: "clang++"} ]

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      # Install dependencies
      run: sudo apt update && sudo apt install -yq libpng++-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{ env.BUILD_DIR }}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{ env.BUILD_DIR }}

    - uses: actions/upload-artifact@v2
      with:
        name: SimpleLogo
        path: build/bin/SimpleLogo
